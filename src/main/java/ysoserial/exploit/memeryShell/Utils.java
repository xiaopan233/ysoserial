package ysoserial.exploit.memeryShell;

import com.sun.xml.internal.ws.util.ByteArrayBuffer;
import org.apache.commons.codec.binary.Base64;

import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.URL;

public class Utils {
    public static byte[] loadClassBytes(Class clazz){
        ByteArrayBuffer byteArrayBuffer = new ByteArrayBuffer();
        try {
            URL resource = clazz.getResource(clazz.getSimpleName() + ".class");
            String path = resource.getPath();
            FileInputStream fileInputStream = new FileInputStream(path);
            byte[] buffer = new byte[1024];
            int len;
            while ((len = fileInputStream.read(buffer)) > 0){
                byteArrayBuffer.write(buffer, 0, len);
            }
            fileInputStream.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return byteArrayBuffer.toByteArray();
    }

    public static byte[] objectToBytes(Object o){
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        ObjectOutputStream objectOutputStream;
        try {
            objectOutputStream = new ObjectOutputStream(byteArrayOutputStream);
            objectOutputStream.writeObject(o);
            objectOutputStream.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return byteArrayOutputStream.toByteArray();
    }


    public static String bytesToBase64String(byte[] b){
        return Base64.encodeBase64String(b);
    }

    public static byte[] base64StringToBytes(String s){
        return Base64.decodeBase64(s);
    }
}
